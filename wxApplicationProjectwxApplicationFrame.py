"""Subclass of wxApplicationFrame, which is generated by wxFormBuilder."""

import matplotlib
matplotlib.interactive(True)
matplotlib.use('WXAgg')

import wx
import wxApplicationProject

from matplotlib.backends.backend_wxagg import FigureCanvasWxAgg
from matplotlib.backends.backend_wx import NavigationToolbar2Wx, wxc
from matplotlib.figure import Figure
import numpy as np

iconW = 24
iconH = 24
iconW2 = 36
iconH2 = 36
iconSize = wx.Size(iconW,iconH)

def createBitmapIconFromPng(file,w,h):
	image = wx.Image(file)
	image.Rescale(w,h, wx.IMAGE_QUALITY_BILINEAR )
	return image.ConvertToBitmap()

def createToolbar(self):
	# ツールバーの設定
	self.m_wxApplicationToolbar.SetToolSeparation( 5 )
	self.m_wxApplicationToolbar.SetMargins( wx.Size( 3,3 ) )
	self.m_wxApplicationToolbar.SetToolBitmapSize( iconSize )
	# 開くボタン
	self.m_openTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"開く", createBitmapIconFromPng(u"icons/open.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	# 保存ボタン	
	self.m_saveTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"保存", createBitmapIconFromPng(u"icons/save.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	# キャプチャーボタン	
	self.m_captureTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"キャプチャー", createBitmapIconFromPng(u"icons/capture.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	#	
	self.m_wxApplicationToolbar.AddSeparator()
	# 画像の情報ボタン
	self.m_imageInfoTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"画像の情報", createBitmapIconFromPng(u"icons/info.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	# ズームインボタン
	self.m_zoomInTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"ズームイン", createBitmapIconFromPng(u"icons/zoomin.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	# ズームインボタン	
	self.m_zoomOutTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"ズームアウト", createBitmapIconFromPng(u"icons/zoomout.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	# 前のファイル	
	self.m_prevFileTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"前のファイル", createBitmapIconFromPng(u"icons/left.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	# 次のファイル
	self.m_nextFileTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"次のファイル", createBitmapIconFromPng(u"icons/right.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	#	
	self.m_wxApplicationToolbar.AddSeparator()
	# 変位分析	
	self.m_displacementTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"変位分析", createBitmapIconFromPng(u"icons/icon_001030_256.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	# 振動モード
	self.m_vibrationModeTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"振動モード", createBitmapIconFromPng(u"icons/icon_105950_256.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	# 振動空間差分	
	self.m_spatialDifferenceTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"空間差分", createBitmapIconFromPng(u"icons/icon_156790_256.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	# 減衰分析	
	self.m_dampedAnalysisTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"減衰分析", createBitmapIconFromPng(u"icons/icon_162440_256.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	#
	self.m_wxApplicationToolbar.AddSeparator()
	# 設定	
	self.m_settingTool = self.m_wxApplicationToolbar.AddTool( wx.ID_ANY, u"設定", createBitmapIconFromPng(u"icons/setting.png",iconW,iconH), wx.NullBitmap, wx.ITEM_NORMAL, wx.EmptyString, wx.EmptyString, None ) 
	#
	self.m_wxApplicationToolbar.Realize() 

def createMovieTool(self):
		bSizer14 = wx.BoxSizer( wx.VERTICAL )		

		self.figure = Figure()
		self.figure.set_facecolor((0, 0, 0))
		self.canvas = FigureCanvasWxAgg(self, -1, self.figure)
		self.canvas.SetSize((980, 600))
		self.navigationToolbar = NavigationToolbar2Wx(self.canvas)
		self.navigationToolbar.Realize()
		bSizer14.Add(self.canvas, 0, wx.LEFT | wx.EXPAND)
		bSizer14.Add(self.navigationToolbar, 0, wx.LEFT | wx.EXPAND)
		self.navigationToolbar.update()
		
		bSizer19 = wx.BoxSizer( wx.HORIZONTAL )		
		self.m_slider1 = wx.Slider( self, wx.ID_ANY, 0, 0, 100, wx.DefaultPosition, wx.Size(830,25), wx.SL_HORIZONTAL )
		bSizer19.Add( self.m_slider1, 0, wx.ALIGN_BOTTOM, 20 )		
		self.m_textCtrl3 = wx.TextCtrl( self, wx.ID_ANY, u"---", wx.DefaultPosition, wx.DefaultSize, wx.TE_CENTRE )
		bSizer19.Add( self.m_textCtrl3, 0, wx.ALIGN_BOTTOM, 20 )				
		bSizer14.Add( bSizer19, 1, wx.ALIGN_BOTTOM, 20 )
		
		bSizer21 = wx.BoxSizer( wx.VERTICAL )
		bSizer22 = wx.BoxSizer( wx.HORIZONTAL )		
		self.m_bpButton14 = wx.BitmapButton( self, wx.ID_ANY, createBitmapIconFromPng(u"icons/player-4.png",iconW2,iconH2), wx.DefaultPosition, wx.DefaultSize, wx.BU_AUTODRAW )
		bSizer22.Add( self.m_bpButton14, 0, wx.ALIGN_CENTER, 5 )		
		self.m_bpButton15 = wx.BitmapButton( self, wx.ID_ANY, createBitmapIconFromPng(u"icons/player-6.png",iconW2,iconH2), wx.DefaultPosition, wx.DefaultSize, wx.BU_AUTODRAW )
		bSizer22.Add( self.m_bpButton15, 0, wx.ALIGN_CENTER, 5 )		
		self.m_bpButton16 = wx.BitmapButton( self, wx.ID_ANY, createBitmapIconFromPng(u"icons/player-2.png",iconW2,iconH2), wx.DefaultPosition, wx.DefaultSize, wx.BU_AUTODRAW )
		bSizer22.Add( self.m_bpButton16, 0, wx.ALIGN_CENTER, 5 )		
		self.m_bpButton17 = wx.BitmapButton( self, wx.ID_ANY, createBitmapIconFromPng(u"icons/player-1.png",iconW2,iconH2), wx.DefaultPosition, wx.DefaultSize, wx.BU_AUTODRAW )
		bSizer22.Add( self.m_bpButton17, 0, wx.ALIGN_CENTER, 5 )		
		self.m_bpButton18 = wx.BitmapButton( self, wx.ID_ANY, createBitmapIconFromPng(u"icons/player-5.png",iconW2,iconH2), wx.DefaultPosition, wx.DefaultSize, wx.BU_AUTODRAW )
		bSizer22.Add( self.m_bpButton18, 0, wx.ALIGN_CENTER, 5 )		
		self.m_bpButton19 = wx.BitmapButton( self, wx.ID_ANY, createBitmapIconFromPng(u"icons/player-3.png",iconW2,iconH2), wx.DefaultPosition, wx.DefaultSize, wx.BU_AUTODRAW )
		bSizer22.Add( self.m_bpButton19, 0, wx.ALIGN_CENTER, 5 )		
		self.m_bpButton20 = wx.BitmapButton( self, wx.ID_ANY, createBitmapIconFromPng(u"icons/home.png",iconW2,iconH2), wx.DefaultPosition, wx.DefaultSize, wx.BU_AUTODRAW )
		bSizer22.Add( self.m_bpButton20, 0, wx.ALIGN_CENTER, 5 )		
		self.m_bpButton21 = wx.BitmapButton( self, wx.ID_ANY, createBitmapIconFromPng(u"icons/capture.png",iconW2,iconH2), wx.DefaultPosition, wx.DefaultSize, wx.BU_AUTODRAW )
		bSizer22.Add( self.m_bpButton21, 0, wx.ALIGN_CENTER, 5 )		
		self.m_debugButton = wx.Button( self, wx.ID_ANY, u"デバッグ", wx.DefaultPosition, wx.DefaultSize, 0 )
		bSizer22.Add( self.m_debugButton, 0, wx.ALIGN_CENTER, 5 )
		self.m_startMeasureButton = wx.Button( self, wx.ID_ANY, u"計測開始", wx.DefaultPosition, wx.DefaultSize, 0 )
		bSizer22.Add( self.m_startMeasureButton, 0, wx.ALIGN_CENTER, 5 )

		#BoxSizer( wx.HORIZONTAL )の場合右寄せが効かないので、スペースで代用する
		self.m_staticText4 = wx.StaticText( self, wx.ID_ANY, u"　　　　　　                         　　　　　", wx.DefaultPosition, wx.DefaultSize, 0 )
		self.m_staticText4.Wrap( -1 )
		bSizer22.Add( self.m_staticText4, 0, wx.ALL, 5 )
		self.m_staticText3 = wx.StaticText( self, wx.ID_ANY, u"表示倍率：", wx.DefaultPosition, wx.DefaultSize, wx.TE_CENTRE )
		self.m_staticText3.Wrap( -1 )
		self.m_staticText3.SetForegroundColour('#000000')
		bSizer22.Add( self.m_staticText3, 0, wx.ALIGN_CENTER)		
		self.m_textCtrl4 = wx.TextCtrl( self, wx.ID_ANY, u"300",  wx.DefaultPosition, wx.DefaultSize, wx.TE_CENTRE)
		bSizer22.Add( self.m_textCtrl4, 0, wx.ALIGN_CENTER)

		bSizer21.Add( bSizer22, 1, wx.EXPAND, 5 )	
		bSizer14.Add( bSizer21, 1, wx.EXPAND, 5 )
		self.SetSizer(bSizer14)
		#self.SetSizer( bSizer14 )			

# Implementing wxApplicationFrame
class wxApplicationProjectwxApplicationFrame( wxApplicationProject.wxApplicationFrame ):
	def __init__( self, parent ):
		wxApplicationProject.wxApplicationFrame.__init__( self, parent )

		createToolbar(self)	
		createMovieTool(self)

	
